@model Hotel.Domain.Entities.Room

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Room</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.RoomId)

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CountOfPeople, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CountOfPeople, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CountOfPeople, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RoomClass, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RoomClass, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RoomClass, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RoomState, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RoomState, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RoomState, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@

@using (Html.BeginForm())
{@Html.AntiForgeryToken()
<div class="panel-body">
    @Html.HiddenFor(m => m.RoomId)
    @*@foreach (var property in ViewData.ModelMetadata.Properties)
        {
            switch (property.PropertyName)
            {
                case "RoomId":
                case "ImageData":
                case "ImageMimeType":
                    // Ничего не делать
                    break;
                default:
                    <div class="form-group">
                        <label>@(property.DisplayName ?? property.PropertyName)</label>
                        @if (property.PropertyName == "Description")
                        {
                            @Html.TextArea(property.PropertyName, null,
                                new { @class = "form-control", rows = 5 })
                        }
                        else
                        {
                            @Html.TextBox(property.PropertyName, null,
                                new { @class = "form-control" })
                        }
                        @Html.ValidationMessage(property.PropertyName)
                    </div>
                    break;
            }
        }*@
    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CountOfPeople, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CountOfPeople, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CountOfPeople, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RoomClass, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class=" form-control" id="RoomClass" name="RoomClass">
                <option>A</option>
                <option>B</option>
                <option>C</option>
                <option>Luxe</option>
            </select>
            @Html.ValidationMessageFor(model => model.CountOfPeople, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RoomState, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class=" form-control" id="RoomState" name="RoomState">
                <option>Free</option>
                <option>Busy</option>
                <option>Booked</option>
                <option>NotAvailable</option>
            </select>
            @Html.ValidationMessageFor(model => model.RoomClass, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div style="position:relative;">
            <label>Картинка</label>
            <a class='btn' href='javascript:;'>
                Выберите файл...
                <input type="file" name="Image" size="40"
                       style="position:absolute;z-index:2;top:0;
                                left:0;filter: alpha(opacity=0); opacity:0;
                                background-color:transparent;color:transparent;"
                       onchange='$("#upload-file-info").html($(this).val());'>
            </a>
            <span class='label label-info' id="upload-file-info"></span>
        </div>
        @if (Model.ImageData == null)
        {
            <div class="form-control-static">Нет картинки</div>
        }
        else
        {
            <img class="img-thumbnail" width="150" height="150"
                 src="@Url.Action("GetImage", "Room",
                        new { Model.RoomId })" />
        }
    </div>
</div>
<div class="panel-footer">
    <input type="submit" value="Сохранить" class="btn btn-primary" />
    @Html.ActionLink("Отменить изменения и вернуться к списку", "Index", null, new
    {
        @class = "btn btn-default"
    })
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
